# This file maps docker container names to one single entity for Nginx to hit
# Additionally, it also defines the load balancing behaviour

# Load balancer techiques: source: https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/

# not sticky:
# - none defined: Round robin
# - least_conn: Sends the request to the service with least active connections
# sticky:
# - ip_hash: Sends the request from the same ip group to the same server, first three octets
# - hash: user defined hash key, redirects to the same server the key matches
#
# additional sticky options for upstream server:
# - sticky: specifies how to apply the sticky session
#   - cookie :  example:  sticky cookie srv_id expires=1h domain=.example.com path=/;
#   - route :   example:  route $route_cookie $route_uri;
#   - learn :   example:  learn
#                       create=$upstream_cookie_examplecookie
#                       lookup=$cookie_examplecookie
#                       zone=client_sessions:1m
#                       timeout=1h;

# Misc explanations:
# fail_timeout=xs: checks the state once it is down every x seconds
# backup: if the original server is down, this will replace it untill the original returns

# user-api containers
upstream user-api {
  server user-api-1:3001 fail_timeout=30s;
  server user-api-2:3001 fail_timeout=30s;
}

# writer-api containers
upstream writer-api-kea {
  server writer-api-kea-1:4001 fail_timeout=30s;
  server writer-api-kea-2:4001 backup;
}

upstream writer-api-dtu {
  server writer-api-dtu-1:4001 fail_timeout=30s;
  server writer-api-dtu-2:4001 backup;
}

# reader-api containers
upstream reader-api-kea {
  server reader-api-kea-1:5001 fail_timeout=30s; 
  server reader-api-kea-2:5001 backup; 
}

upstream reader-api-dtu {
  server reader-api-dtu-1:5001 fail_timeout=30s; 
  server reader-api-dtu-2:5001 backup; 
}

